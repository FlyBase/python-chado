<?xml version="1.0"?>
<tool id="chakin_load_blast" name="load" version="@WRAPPER_VERSION@.0">
 <description>blast</description>
	<macros>
		<import>macros.xml</import>
	</macros>
	<expand macro="requirements"/>
	<command detect_errors="aggressive">
chakin load blast
'$analysis_id'
'$organism_id'
'$input'

#if $blastdb:
  --blastdb '$blastdb'
#end if
#if $blastdb_id:
  --blastdb_id '$blastdb_id'
#end if
#if $re_name:
  --re_name '$re_name'
#end if
#if $query_type:
  --query_type '$query_type'
#end if
#if $match_on_name:
  $match_on_name
#end if
#if $skip_missing:
  $skip_missing
#end if

| jq -S . > $results
</command>
	<inputs>
    <!-- arguments -->
	<param name="analysis_id" label="Analysis Id" argument="analysis_id" type="integer" value="0" help="Analysis ID" />
	<param name="organism_id" label="Organism Id" argument="organism_id" type="integer" value="0" help="Organism ID" />
	<param name="input" label="Input" argument="input" type="text" help="Path to the Blast XML file to load" />

    <!-- options -->
	<param name="blastdb" label="Blastdb" argument="blastdb" type="text" help="Name of the database blasted against (must be in the Chado db table)" />
	<param name="blastdb_id" label="Blastdb Id" argument="blastdb_id" type="text" help="ID of the database blasted against (must be in the Chado db table)" />
	<param name="re_name" label="Re Name" argument="re_name" type="text" help="Regular expression to extract the feature name from the input file (first capturing group will be used)." />
	<param name="query_type" label="Query Type" argument="query_type" type="text" help="The feature type (e.g. 'gene', 'mRNA', 'polypeptide', 'contig') of the query. It must be a valid Sequence Ontology term." />
	<param name="match_on_name" label="Match On Name" argument="match_on_name" type="boolean" truevalue="--match_on_name" falsevalue="" help="Match features using their name instead of their uniquename" />
	<param name="skip_missing" label="Skip Missing" argument="skip_missing" type="boolean" truevalue="--skip_missing" falsevalue="" help="Skip lines with unknown features or GO id instead of aborting everything." />

	</inputs>
	<outputs>
		<data format="json" name="results"/>
	</outputs>
	<help>
Load a blast analysis, in the same way as does the tripal_analysis_blast module

@HELP@
	</help>
</tool>
