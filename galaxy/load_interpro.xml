<?xml version="1.0"?>
<tool id="chakin_load_interpro" name="load" version="@WRAPPER_VERSION@.0">
 <description>interpro</description>
	<macros>
		<import>macros.xml</import>
	</macros>
	<expand macro="requirements"/>
	<command detect_errors="aggressive">
chakin load interpro
'$analysis_id'
'$input'

#if $parse_go:
  $parse_go
#end if
#if $query_re:
  --query_re '$query_re'
#end if
#if $query_type:
  --query_type '$query_type'
#end if
#if $query_uniquename:
  $query_uniquename
#end if

| jq -S . > $results
</command>
	<inputs>
    <!-- arguments -->
	<param name="analysis_id" label="Analysis Id" argument="analysis_id" type="integer" value="0" help="Analysis ID" />
	<param name="input" label="Input" argument="input" type="text" help="Path to the InterProScan file to load" />

    <!-- options -->
	<param name="parse_go" label="Parse Go" argument="parse_go" type="boolean" truevalue="--parse_go" falsevalue="" help="Load GO annotation to the database" />
	<param name="query_re" label="Query Re" argument="query_re" type="text" help="The regular expression that can uniquely identify the query name. This parameter is required if the feature name is not the first word in the blast query name." />
	<param name="query_type" label="Query Type" argument="query_type" type="text" help="The feature type (e.g. 'gene', 'mRNA', 'polypeptide', 'contig') of the query. It must be a valid Sequence Ontology term." />
	<param name="query_uniquename" label="Query Uniquename" argument="query_uniquename" type="boolean" truevalue="--query_uniquename" falsevalue="" help="Use this if the --query-re regular expression matches unique names instead of names in the database." />

	</inputs>
	<outputs>
		<data format="json" name="results"/>
	</outputs>
	<help>
Load a blast analysis, in the same way as does the tripal_analysis_intepro module

@HELP@
	</help>
</tool>
